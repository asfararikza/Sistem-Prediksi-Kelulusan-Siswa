# -*- coding: utf-8 -*-
"""Prediksi Kelulusan Siswa SVM Model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cfH0aoxIu6w3TkxhAmzXVR2Nv_8nMkzi
"""

import pandas as pd
import os
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import OneHotEncoder
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import classification_report, confusion_matrix

# @title
from google.colab import userdata

os.environ["KAGGLE_KEY"] = userdata.get('KAGGLE_KEY')
os.environ["KAGGLE_USERNAME"] = userdata.get('KAGGLE_USERNAME')

!kaggle datasets download fundal/students-annual-score-in-history-geography-subject

!unzip 'students-annual-score-in-history-geography-subject'

"""# Data Understanding"""

df=pd.read_csv('/content/Students Annual Score in History geography subject.csv')

df.head()

df.info()

"""Pada dataset ini memiliki sembilan fitur yang didapatkan dari penilaian siswa pada mata pelajaran History Geography di salah satu sekolah Algeria.

Dalam dataset terdapat 634 data penilaian siswa dengan fitur yang menjadi target prediksi adalah fitur Success yang menunjukkan kelulusan siswa terhadap mata pelajaran tersebut.

"""

df['Gender'].unique()

"""Pada fitur Gender bertipe kategori yang menunjukkan jenis kelamin siswa dengan 'F' mewakili female atau wanita dan 'M' mewakili male atau pria."""

df['Success'].unique()

"""Pada fitur Success juga bertipe kategori bilangan biner yang menunjukkan apakah siswa lulus pada mata pelajaran atau tidak dengan '1' mewakili true atau lulus dan '0' mewakili false atau tidak lulus."""

numeric_columns = df.select_dtypes(include=['number'])
correlation_matrix = df[numeric_columns.columns].corr()


plt.figure(figsize=(8, 6))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt='.2f', square=True)
plt.title('Correlation Matrix')
plt.show()

"""Berdasarkan grafik korelasi yang ditampilkan, fitur yang paling berpengaruh terhadap kelulusan siswa adalah nilai ujian (exam) dan skor tahunan (annual score). Ini menunjukkan bahwa nilai ujian memiliki pengaruh yang lebih signifikan dibandingkan dengan nilai tes (test) dalam menentukan kelulusan siswa. Temuan ini menegaskan pentingnya nilai ujian sebagai indikator utama dalam evaluasi keberhasilan akademis siswa.

# Data Preparation

Pada tahap data preparation bertujuan mempersiapkan data sebelum digunakan untuk pelatihan model. Pada tahap ini dilakukan beberapa langkah seperti:


1.   Penghapusan fitur yang tidak diperlukan
2.   Pemeriksaan data kosong (null values)
3. Pemeriksaan data duplikat
4. Penyesuaian tipe data
5. Pembagian data uji dan data latih
"""

df.drop(columns=['Unnamed: 9'],inplace=True)

df.isnull().sum()

jumlah_duplikat = df.duplicated().sum()
print(f"Jumlah data duplikat: {jumlah_duplikat}")

encoder = OneHotEncoder(sparse_output=False)

df['Gender'] = encoder.fit_transform(df[['Gender']])



df.head()

df.info()

numeric_columns = df.select_dtypes(include=['number'])
correlation_matrix = df[numeric_columns.columns].corr()


plt.figure(figsize=(8, 6))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt='.2f', square=True)
plt.title('Correlation Matrix')
plt.show()

"""Setelah mengubah fitur Gender menjadi variabel numerik kategorikal, grafik korelasi yang dihasilkan menunjukkan bahwa gender memiliki pengaruh terendah terhadap kelulusan siswa. Hal ini mengindikasikan bahwa faktor gender tidak memiliki kontribusi yang signifikan dalam menentukan kelulusan siswa dibandingkan dengan fitur-fitur lainnya yang diuji."""

X = df.drop('Success', axis=1)
y = df['Success']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.15, random_state=42)

len(X_train), len(X_test)

"""15% (96 data) dari data akan dialokasikan untuk pengujian, sementara 85% (538 data) sisanya akan digunakan untuk pelatihan.

# Modeling
"""

model = svm.SVC(kernel='linear')
model.fit(X_train, y_train)
y_pred= model.predict(X_test)

from xgboost import XGBClassifier

xgb_clf = XGBClassifier()
xgb_clf.fit(X_train, y_train)
y_pred_xgb = xgb_clf.predict(X_test)

"""# Evaluasi"""

print(classification_report(y_test, y_pred))

print(classification_report(y_test, y_pred_xgb))

print(confusion_matrix(y_test, y_pred))

""" Pada hasil confusion matrix, menunjukkan bahwa model klasifikasi yang telah dibuat memiliki kinerja yang baik. Dari total 65 prediksi untuk kelas 0, semuanya benar, dan model berhasil mengidentifikasi 30 dari 31 prediksi untuk kelas 1 dengan tepat. Namun, ada satu kasus dari kelas 1 yang salah diklasifikasikan sebagai kelas 0."""

print(confusion_matrix(y_test, y_pred_xgb))